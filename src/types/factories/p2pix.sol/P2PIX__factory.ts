/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { P2PIX, P2PIXInterface } from "../../p2pix.sol/P2PIX";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "defaultBlocks",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "validSigners",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "_reputation",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "tokenStates",
        type: "bool[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyReleased",
    type: "error",
  },
  {
    inputs: [],
    name: "AmountNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "DecOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "EmptyPixTarget",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidDeposit",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "LengthMismatch",
    type: "error",
  },
  {
    inputs: [],
    name: "LockExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxBalExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughTokens",
    type: "error",
  },
  {
    inputs: [],
    name: "NotExpired",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitialized",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlySeller",
    type: "error",
  },
  {
    inputs: [],
    name: "Reentrancy",
    type: "error",
  },
  {
    inputs: [],
    name: "StaticCallFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TokenDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "TxAlreadyUsed",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "AllowedERC20Updated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "DepositWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "lockID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "seller",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LockAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "blocks",
        type: "uint256",
      },
    ],
    name: "LockBlocksUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LockReleased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockId",
        type: "uint256",
      },
    ],
    name: "LockReturned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "reputation",
        type: "address",
      },
    ],
    name: "ReputationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "RootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "ValidSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "signers",
        type: "address[]",
      },
    ],
    name: "ValidSignersUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "_castAddrToKey",
    outputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_key",
        type: "uint256",
      },
    ],
    name: "_castKeyToAddr",
    outputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "allowedERC20s",
    outputs: [
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "defaultLockBlocks",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_amount",
        type: "uint96",
      },
      {
        internalType: "uint160",
        name: "_pixTarget",
        type: "uint160",
      },
      {
        internalType: "bool",
        name: "_valid",
        type: "bool",
      },
      {
        internalType: "bytes32",
        name: "allowlistRoot",
        type: "bytes32",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "sellers",
        type: "address[]",
      },
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getBalances",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "getLocksStatus",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "enum DataTypes.LockStatus[]",
        name: "",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getPixTarget",
    outputs: [
      {
        internalType: "uint160",
        name: "pixTarget",
        type: "uint160",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "getValid",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint80",
        name: "_amount",
        type: "uint80",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "expiredLocks",
        type: "uint256[]",
      },
    ],
    name: "lock",
    outputs: [
      {
        internalType: "uint256",
        name: "lockID",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "lockCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "mapLocks",
    outputs: [
      {
        internalType: "uint80",
        name: "amount",
        type: "uint80",
      },
      {
        internalType: "uint160",
        name: "pixTarget",
        type: "uint160",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "buyerAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sellerKey",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "counter",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expirationBlock",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lockID",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "pixTimestamp",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "reputation",
    outputs: [
      {
        internalType: "contract IReputation",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sellerKey",
        type: "uint256",
      },
    ],
    name: "sellerAllowList",
    outputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "sellerKey",
        type: "uint256",
      },
      {
        internalType: "contract ERC20",
        name: "erc20",
        type: "address",
      },
    ],
    name: "sellerBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "packed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_blocks",
        type: "uint256",
      },
    ],
    name: "setDefaultLockBlocks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IReputation",
        name: "_reputation",
        type: "address",
      },
    ],
    name: "setReputation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "merkleroot",
        type: "bytes32",
      },
    ],
    name: "setRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_validSigners",
        type: "address[]",
      },
    ],
    name: "setValidSigners",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "state",
        type: "bool",
      },
    ],
    name: "setValidState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "_states",
        type: "bool[]",
      },
    ],
    name: "tokenSettings",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "lockIDs",
        type: "uint256[]",
      },
    ],
    name: "unlockExpired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "message",
        type: "bytes32",
      },
    ],
    name: "usedTransactions",
    outputs: [
      {
        internalType: "bool",
        name: "used",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userRecord",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "signer",
        type: "uint256",
      },
    ],
    name: "validBacenSigners",
    outputs: [
      {
        internalType: "bool",
        name: "valid",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "expiredLocks",
        type: "uint256[]",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60806040526200293e80380380620000178162000126565b928339810160a0828203126200010b5781516020808401519093916001600160401b03918281116200010b5784620000519185016200017f565b9062000060604085016200016a565b9260608501518181116200010b57866200007c9187016200017f565b9460808101519182116200010b57019480601f870112156200010b578551620000af620000a98262000152565b62000126565b96888089848152019260051b8201019283116200010b578801905b828210620000f157505050620000e19550620001e6565b6040516124fc9081620004428239f35b815180151581036200010b578152908801908801620000ca565b600080fd5b634e487b7160e01b600052604160045260246000fd5b6040519190601f01601f191682016001600160401b038111838210176200014c57604052565b62000110565b6001600160401b0381116200014c5760051b60200190565b51906001600160a01b03821682036200010b57565b9080601f830112156200010b578151906200019e620000a98362000152565b9182938184526020808095019260051b8201019283116200010b578301905b828210620001cc575050505090565b838091620001da846200016a565b815201910190620001bd565b600080546001600160a01b031916339081178255929695949392817f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768180a3816002556040519182527f70fa43ca70216ad905ade86b9e650a691b2ce5a01980d0a81bdd8324141b851160208093a18651878301979060051b810183013d1515895b811562000306575b5050506040519280840191818552518092526040840198925b828110620002e85750505050907f14a422d2412784a5749d03da98921fe468c98577b767851389a9f58ea5a363d782620002d593620002db97980390a16001600160a01b031662000337565b62000390565b620002e66001600355565b565b83516001600160a01b03168a52988101989281019260010162000289565b9085826001829697989451600c1b550190838210156200032c5791509493929462000268565b509493929462000270565b6000546001600160a01b0390811633036200037f57816020917fe127cf589a3879da0156d4a24f43b44f65cfa3570de594806b0bfa2fcf06884f9360015560405191168152a1565b6040516282b42960e81b8152600490fd5b60008054919290916001600160a01b031633036200037f5782519182156200043457815183036200042757602092919284818080970195019360051b0101925b838103620003df575050505050565b84809181600c63cbc9d1c48152825186528651918291205581517f5d6e86e5341d57a92c49934296c51542a25015c9b1782a1c2722a940131c3d9a8680a301920191620003d0565b63ff633a3890526004601cfd5b63df95788390526004601cfdfe6080604052600436101561001b575b361561001957600080fd5b005b60003560e01c806304937320146102065780630d2a2d441461020157806313af4035146101fc578063328a7181146101f7578063367821f0146101f2578063461f3120146101ac57806349ef8448146101ed5780634b2ae980146101e8578063574983c8146101e35780635fd8c710146101de57806369cc6af4146101d95780636d82d9e0146101d457806377cd38a4146101cf5780637f94f65d146101ca57806380e1d302146101c557806384ab1d28146101c05780638da5cb5b146101bb5780638db564c2146101b65780639872dbfe146101b157806398a26871146101ac5780639eee8d4b146101a7578063ad8f2eed146101a2578063b0983d391461019d578063c52164c614610198578063c593dfd814610193578063d1c070281461018e578063d4fac45d14610189578063d6e8b97314610184578063dc43221c1461017f578063f7d0e04b1461017a5763fb8c5ef00361000e5761142c565b6113bc565b611321565b611276565b61125d565b6111bb565b610e65565b610e31565b610df7565b610d70565b610d30565b610808565b610d12565b610cf4565b610cc0565b610c8a565b610c71565b610c20565b610be8565b610ad7565b610a97565b610a14565b6109b0565b610986565b6108eb565b610776565b610545565b610497565b61036a565b346102325760206003193601126102325760043560005260066020526020604060002054604051908152f35b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176102a757604052565b610237565b6040519060e0820182811067ffffffffffffffff8211176102a757604052565b67ffffffffffffffff81116102a75760051b60200190565b73ffffffffffffffffffffffffffffffffffffffff81160361023257565b81601f8201121561023257803591610319836102cc565b926103276040519485610266565b808452602092838086019260051b820101928311610232578301905b828210610351575050505090565b838091833561035f816102e4565b815201910190610343565b34610232576020806003193601126102325760043567ffffffffffffffff81116102325761039c903690600401610302565b9073ffffffffffffffffffffffffffffffffffffffff918260005416330361046d57805181830192849160051b830181013d1515855b8115610439575b50505060405192818401908285525180915260408401949160005b828110610423577f14a422d2412784a5749d03da98921fe468c98577b767851389a9f58ea5a363d786880387a1005b83518516875295810195928101926001016103f4565b90838260018298969499979951600c1b550190838210156104615791509593959492946103d2565b509593959492946103d9565b60046040517f82b42900000000000000000000000000000000000000000000000000000000008152fd5b34610232576020600319360112610232576004356104b4816102e4565b600090815473ffffffffffffffffffffffffffffffffffffffff808216330361046d577fffffffffffffffffffffffff0000000000000000000000000000000000000000921691829116178255337f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d768380a380f35b60643590811515820361023257565b3590811515820361023257565b346102325760a060031936011261023257600435610562816102e4565b6024356bffffffffffffffffffffffff8116908181036102325760443590610589826102e4565b610591610529565b6084359373ffffffffffffffffffffffffffffffffffffffff8087169033600c1b9086161561074c576105d96105d58363cbc9d1c4600c526000526020600c205490565b1590565b610722576b3fffffffffffffffffffffff61060a83839060205263739094b1600c52600c1c6000526034600c205490565b16906a52b7d2dcc80cd2e4000000610622858461163a565b116106f857826106e39761069c9661066e89610693967f63d8d7d5e63e9840ec91a12a160d27b7cfab294f6ba070b7359692acfe6b03bf9d610662611647565b806106e8575b5061163a565b9060ff1b91605f1b1717919060205263739094b1600c52600c1c6000526034600c2055565b30903390611682565b6106a66001600355565b6040805173ffffffffffffffffffffffffffffffffffffffff90951685526bffffffffffffffffffffffff90911660208501523393918291820190565b0390a2005b6106f29033611f47565b38610668565b60046040517ff3fb0eb9000000000000000000000000000000000000000000000000000000008152fd5b60046040517f1578328e000000000000000000000000000000000000000000000000000000008152fd5b60046040517f6a3bc53e000000000000000000000000000000000000000000000000000000008152fd5b3461023257602060031936011261023257600435600052600560205260e0604060002080549073ffffffffffffffffffffffffffffffffffffffff90816001820154168260028301541660038301549160056004850154940154946040519669ffffffffffffffffffff8116885260501c16602087015260408601526060850152608084015260a083015260c0820152f35b34610232576020600319360112610232576020600435546040519015158152f35b90815180825260208080930193019160005b828110610849575050505090565b83518552938101939281019260010161083b565b9061087090604083526040830190610829565b81810360209283015282518082529082019282019160009190825b82811061089a57505050505090565b909192939485516004808210156108bf5750815282019482019392919060010161088b565b8660216024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b34610232576020806003193601126102325760043567ffffffffffffffff8111610232573660238201121561023257806004013590610929826102cc565b916109376040519384610266565b80835260248484019160051b8301019136831161023257602401905b8282106109775761096384612362565b906109736040519283928361085d565b0390f35b81358152908401908401610953565b346102325760206003193601126102325760206004356109a5816102e4565b60405190600c1b8152f35b346102325760206003193601126102325760043573ffffffffffffffffffffffffffffffffffffffff60005416330361046d576020817f70fa43ca70216ad905ade86b9e650a691b2ce5a01980d0a81bdd8324141b851192600255604051908152a1005b3461023257600080600319360112610a945773ffffffffffffffffffffffffffffffffffffffff815416330361046d57478180808084335af115610a87576040805133815260208101929092527feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91a180f35b63b12d13eb82526004601cfd5b80fd5b34610232576020600319360112610232576020610acd600435610ab9816102e4565b63cbc9d1c4600c526000526020600c205490565b6040519015158152f35b3461023257604060031936011261023257600435610af4816102e4565b602435801515908181036102325733600c1b610b2684829060205263739094b1600c52600c1c6000526034600c205490565b918215610bbe57610b75927f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff869260ff1b911617919060205263739094b1600c52600c1c6000526034600c2055565b73ffffffffffffffffffffffffffffffffffffffff6040519216825260208201527fca585721b6b442dc9183932f7c84dc2880efb67c4da52cc06873e78971105d4960403392a2005b60046040517f87138d5c000000000000000000000000000000000000000000000000000000008152fd5b34610232576020600319360112610232576020610c186004356374dfee70600c52600c1c60005260206000205490565b604051908152f35b3461023257604060031936011261023257610019600435610c40816102e4565b60243590611f47565b600319604091011261023257600435610c61816102e4565b90602435610c6e816102e4565b90565b34610232576020610acd610c8436610c49565b906122aa565b3461023257602060031936011261023257602060405173ffffffffffffffffffffffffffffffffffffffff600435600c1c168152f35b3461023257600060031936011261023257602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b34610232576000600319360112610232576020600454604051908152f35b34610232576000600319360112610232576020600254604051908152f35b34610232576040600319360112610232576020610c18602435610d52816102e4565b6004359060205263739094b1600c52600c1c6000526034600c205490565b3461023257610d7e36610c49565b6000903d15610da9575b60208273ffffffffffffffffffffffffffffffffffffffff60405191168152f35b60205263739094b1600c525260206034600c2054605f1c38610d88565b9181601f840112156102325782359167ffffffffffffffff8311610232576020808501948460051b01011161023257565b346102325760206003193601126102325760043567ffffffffffffffff811161023257610e2b610019913690600401610dc6565b90611d29565b3461023257600060031936011261023257602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346102325760a06003193601126102325760043560843560ff8116810361023257610e8e611647565b610ea2826000526005602052604060002090565b80549069ffffffffffffffffffff821691821561118057600582019081544311611156576110f784610fed936002611111966110347f364537f14276f2a0ce9905588413f96454cbb8fb2e4f5308389307c1098bede89a610fc76040516020810190610fb781610f8b8d8c73ffffffffffffffffffffffffffffffffffffffff6024359260501c1687917fffffffffffffffffffff00000000000000000000000000000000000000000000907fffffffffffffffffffffffffffffffffffffffff000000000000000000000000603e959360601b16845260b01b166014830152601e8201520190565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282610266565b5190209160643560443584611bae565b6000611006610fed600186015473ffffffffffffffffffffffffffffffffffffffff1690565b73ffffffffffffffffffffffffffffffffffffffff1690565b84547fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000168555955560019055565b0193611057610fed865473ffffffffffffffffffffffffffffffffffffffff1690565b331461112c57697fffffffffffffffffff9060011c1661108433600c1b6000526006602052604060002090565b61108f82825461163a565b90556110d66110ce6110be6110b8885473ffffffffffffffffffffffffffffffffffffffff1690565b600c1b90565b6000526006602052604060002090565b91825461163a565b90555b835473ffffffffffffffffffffffffffffffffffffffff1690611c9c565b5473ffffffffffffffffffffffffffffffffffffffff1690565b60408051948552602085019290925292a26100196001600355565b5061114433600c1b6000526006602052604060002090565b61114f83825461163a565b90556110d9565b60046040517ff6fafba0000000000000000000000000000000000000000000000000000000008152fd5b60046040517f63b4904e000000000000000000000000000000000000000000000000000000008152fd5b906020610c6e928181520190610829565b346102325760406003193601126102325760043567ffffffffffffffff8111610232576111ec903690600401610302565b602435906111f9826102e4565b600091815191611208836122ff565b935b83811061121f576040518061097387826111aa565b8061124c8473ffffffffffffffffffffffffffffffffffffffff6112456001958761234e565b5116612273565b611256828861234e565b520161120a565b34610232576020610c1861127036610c49565b90612273565b346102325760406003193601126102325767ffffffffffffffff600435818111610232576112a8903690600401610302565b9060243590811161023257366023820112156102325780600401356112cc816102cc565b916112da6040519384610266565b81835260209160248385019160051b8301019136831161023257602401905b82821061130a576100198587611541565b83809161131684610538565b8152019101906112f9565b346102325760a06003193601126102325760043561133e816102e4565b6024359061134b826102e4565b6044359169ffffffffffffffffffff831683036102325767ffffffffffffffff9160643583811161023257611384903690600401610dc6565b9060843594851161023257610973956113a46113ac963690600401610dc6565b959094611793565b6040519081529081906020820190565b34610232576020600319360112610232576004356113d9816102e4565b73ffffffffffffffffffffffffffffffffffffffff8060005416330361046d57816020917fe127cf589a3879da0156d4a24f43b44f65cfa3570de594806b0bfa2fcf06884f9360015560405191168152a1005b3461023257606060031936011261023257600435611449816102e4565b60243560443567ffffffffffffffff8111610232577f2cd6435b1b961c13f55202979edd0765a809f69a539d8a477436c94c1211e43e916114a2611494611529933690600401610dc6565b9061149d611647565b611d29565b6114ac84336122aa565b611533575b6114ed33600c1b85836b3fffffffffffffffffffffff6114e783859060205263739094b1600c52600c1c6000526034600c205490565b16612237565b6114f8813386611c9c565b6040805173ffffffffffffffffffffffffffffffffffffffff95909516855260208501919091523393918291820190565b0390a26001600355005b61153c846116db565b6114b1565b9060009073ffffffffffffffffffffffffffffffffffffffff825416330361046d5782519182156115eb57815183036115de57602092919284818080970195019360051b0101925b838103611597575050505050565b84809181600c63cbc9d1c48152825186528651918291205581517f5d6e86e5341d57a92c49934296c51542a25015c9b1782a1c2722a940131c3d9a8680a301920191611589565b63ff633a3890526004601cfd5b63df95788390526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b906001820180921161163557565b6115f8565b9190820180921161163557565b600260035414611658576002600355565b60046040517fab143c06000000000000000000000000000000000000000000000000000000008152fd5b601c600060649281946020966040519860605260405260601b602c526f23b872dd000000000000000000000000600c525af13d156001600051141716156116cd576000606052604052565b637939f4246000526004601cfd5b33600c1b6116ff82829060205263739094b1600c52600c1c6000526034600c205490565b908115610bbe57827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6117489316919060205263739094b1600c52600c1c6000526034600c2055565b73ffffffffffffffffffffffffffffffffffffffff60405191168152600060208201527fca585721b6b442dc9183932f7c84dc2880efb67c4da52cc06873e78971105d4960403392a2565b956117b89073ffffffffffffffffffffffffffffffffffffffff93949661149d611647565b16916117c76105d584876122aa565b611a60576117d58386612273565b9469ffffffffffffffffffff9182841691828810611a3657600c1b956117fc600454611627565b936005611813866000526005602052604060002090565b0154431115611a0c5761185b61183f888a9060205263739094b1600c52600c1c6000526034600c205490565b605f1c73ffffffffffffffffffffffffffffffffffffffff1690565b6118a561186a6002544361163a565b916118886118766102ac565b69ffffffffffffffffffff909a168a52565b73ffffffffffffffffffffffffffffffffffffffff166020890152565b73ffffffffffffffffffffffffffffffffffffffff881660408801523360608801526080870189905260a0870186905260c0870152821561191f5750611912979161190d9133916119078a6374dfee70600c52600c1c60005260206000205490565b91611aa7565b611fe2565b9061191d6001600355565b565b80925068056bc75e2d631000009150611942865169ffffffffffffffffffff1690565b1611611957575061195295611fe2565b611912565b61198861198361197433600c1b6000526006602052604060002090565b54670de0b6b3a7640000900490565b611b35565b816119a66119a0875169ffffffffffffffffffff1690565b92611a8a565b9116119081156119e9575b506119bf5761195295611fe2565b60046040517f1c18f846000000000000000000000000000000000000000000000000000000008152fd5b845169d3c21bcecceda1000000925069ffffffffffffffffffff161611386119b1565b60046040517fd0404f85000000000000000000000000000000000000000000000000000000008152fd5b60046040517f22bbb43c000000000000000000000000000000000000000000000000000000008152fd5b60046040517fb2e532de000000000000000000000000000000000000000000000000000000008152fd5b90670de0b6b3a76400009182810292818404149015171561163557565b73ffffffffffffffffffffffffffffffffffffffff8293941692611af9575b505003611acf57565b60046040517f3b8474be000000000000000000000000000000000000000000000000000000008152fd5b60059291831b8101915b8135808211851b918252602080921852604060002091019282841015611b2a579290611b03565b509150503880611ac6565b6040519060208201907f4d2b1791000000000000000000000000000000000000000000000000000000008252602483015260248252606082019082821067ffffffffffffffff8311176102a7576020926000926040525190600154617530fa906000519115611ba057565b63e10bf1cc6000526004601cfd5b918254611c725760806020927f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a1948452600094859384927b19457468657265756d205369676e6564204d6573736167653a0a3332845260ff603c600420996040519a865216875260405280606052105afa508051903d15611c65576060526040829052600c1b5415611c3d5750565b807f815e1d640000000000000000000000000000000000000000000000000000000060049252fd5b638baa579f90526004601cfd5b60046040517ff490a6ea000000000000000000000000000000000000000000000000000000008152fd5b60109260209260145260345260446000938480936fa9059cbb00000000000000000000000082525af13d156001835114171615611cd857603452565b6390b8ec1890526004601cfd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9190811015611d245760051b0190565b611ce5565b6000905b828210611d4a575010611d3c57565b63dfb035c96000526004601cfd5b90611d6a611d59828585611d14565b356000526005602052604060002090565b90611d7482611f96565b6003820154600192611d9f610fed8583015473ffffffffffffffffffffffffffffffffffffffff1690565b906b3fffffffffffffffffffffff611dcd83859060205263739094b1600c52600c1c6000526034600c205490565b16926a52b7d2dcc80cd2e4000000611e0b611e04611df5855469ffffffffffffffffffff1690565b69ffffffffffffffffffff1690565b809661163a565b116106f857611ed693600293611e3a929060205263739094b1600c52600c1c6000526034600c20908154019055565b80547fffffffffffffffffffffffffffffffffffffffffffff0000000000000000000016815501611e826110b8825473ffffffffffffffffffffffffffffffffffffffff1690565b611ea0611e99826000526006602052604060002090565b5460011c90565b68056bc75e2d631000008111611f2c5750611ec86110f7916000526006602052604060002090565b68056bc75e2d631000009055565b7f830501e61b8b075e170b22a430e39454bdb12ed3e9620e586430b6ac00079da573ffffffffffffffffffffffffffffffffffffffff611f17848888611d14565b60405190358152921691602090a20190611d2d565b90611f41906000526006602052604060002090565b556110f7565b338103611f88576374dfee70600c5280600052816020600020557f0b294da292f26e55fd442b5c0164fbb9013036ff00c5cfdde0efd01c1baaf632600080a3565b6385d1f7266000526004601cfd5b60058101544310611a0c575469ffffffffffffffffffff161561118057565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146116355760010190565b9594906121c073ffffffffffffffffffffffffffffffffffffffff927f8fb3989f70bd172a37d15b41b015e48ea09d59329638377304a4198cd0c4ea65949687600052600560205260406000209361207869ffffffffffffffffffff895116869069ffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffff00000000000000000000825416179055565b60208801517fffff0000000000000000000000000000000000000000ffffffffffffffffffff7dffffffffffffffffffffffffffffffffffffffff0000000000000000000087549260501b1691161785556121316120ed60408a015173ffffffffffffffffffffffffffffffffffffffff1690565b600187019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b606088019a61219b6121578d5173ffffffffffffffffffffffffffffffffffffffff1690565b600288019073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b60808901958651600382015560a08a01516004820155600560c08b0151910155612237565b6121d36121ce600454611fb5565b600455565b61223261220b6121f887995173ffffffffffffffffffffffffffffffffffffffff1690565b9251955169ffffffffffffffffffff1690565b60405193849316958390929169ffffffffffffffffffff6020916040840195845216910152565b0390a3565b9291909280848103119015176122655760205263739094b1600c52600c1c6000526034600c20908154039055565b63ce3a3d376000526004601cfd5b600092913d15612281575050565b9091925060205263739094b1600c526000526034600c20546b3fffffffffffffffffffffff1690565b600092913d156122b8575050565b9091925060205263739094b1600c526000526034600c205460ff1c90565b6040516020810181811067ffffffffffffffff8211176102a75760405260008152906000368137565b90612309826102cc565b6123166040519182610266565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe061234482946102cc565b0190602036910137565b8051821015611d245760209160051b010190565b908151156124b3576000809280519061237a826122ff565b92612384836122ff565b955b83811061239557505050509190565b8060036123b86123a76001948761234e565b516000526005602052604060002090565b01546123e9576123c8818561234e565b516123d3828861234e565b52826123df828a61234e565b5201925b92612386565b69ffffffffffffffffffff6124146124046123a7848861234e565b5469ffffffffffffffffffff1690565b1661244957612423818561234e565b5161242e828861234e565b5261244261243c828a61234e565b60039052565b01926123e3565b60056124586123a7838761234e565b015443111561248a5761246b818561234e565b51612476828861234e565b52612442612484828a61234e565b60029052565b612494818561234e565b5161249f828861234e565b526124426124ad828a61234e565b60019052565b90506124bd6122d6565b90610c6e6122d656fea2646970667358221220216bb367f4639b3049c82d8c672f33139a235b727196b97dde2a622dee39d79b64736f6c63430008130033";

type P2PIXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: P2PIXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class P2PIX__factory extends ContractFactory {
  constructor(...args: P2PIXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    defaultBlocks: PromiseOrValue<BigNumberish>,
    validSigners: PromiseOrValue<string>[],
    _reputation: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    tokenStates: PromiseOrValue<boolean>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<P2PIX> {
    return super.deploy(
      defaultBlocks,
      validSigners,
      _reputation,
      tokens,
      tokenStates,
      overrides || {}
    ) as Promise<P2PIX>;
  }
  override getDeployTransaction(
    defaultBlocks: PromiseOrValue<BigNumberish>,
    validSigners: PromiseOrValue<string>[],
    _reputation: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    tokenStates: PromiseOrValue<boolean>[],
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      defaultBlocks,
      validSigners,
      _reputation,
      tokens,
      tokenStates,
      overrides || {}
    );
  }
  override attach(address: string): P2PIX {
    return super.attach(address) as P2PIX;
  }
  override connect(signer: Signer): P2PIX__factory {
    return super.connect(signer) as P2PIX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): P2PIXInterface {
    return new utils.Interface(_abi) as P2PIXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): P2PIX {
    return new Contract(address, _abi, signerOrProvider) as P2PIX;
  }
}
